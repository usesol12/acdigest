Sub SaveScenario()
    Dim ws As Worksheet
    Dim targetSheet As Worksheet
    Dim sourceRange As Range
    Dim targetRange As Range
    Dim SheetExists As Boolean
    Dim wsName As String
    Dim sourceCell As Range
    Dim targetCell As Range
    Dim targetCell2 As Range
    Dim validationFormula As String
    
        ' Check if cell CellX is empty
If IsEmpty(ThisWorkbook.Sheets("SheetX").Range("CellX").Value) Then
    MsgBox "Select a scenario to save to", vbExclamation
    Exit Sub
Else
    Dim userResponse As VbMsgBoxResult
    userResponse = MsgBox("Saving to " & Range("CellX").Value & "?", vbYesNo + vbQuestion, "CONFIRM SCENARIO")
    
    
    If userResponse = vbNo Then
        Exit Sub
    End If
End If
    
    wsName = Range("CellX").Value
    
    SheetExists = False

    ' Check if SheetA exists
    For Each ws In ThisWorkbook.Sheets
        If ws.Name = wsName Then
            SheetExists = True
            Set targetSheet = ws
            Exit For
        End If
    Next ws

    ' If SheetA does not exist, create it
    If Not SheetExists Then
        Set targetSheet = ThisWorkbook.Sheets.Add
        targetSheet.Name = wsName
        targetSheet.Visible = xlSheetHidden ' Hide the sheet after creation
    End If
    
' START



' END
    
    
ThisWorkbook.Sheets("SheetX").Range("CellX").Offset(1, 0).Value = ""
    ' Set source range
    Set sourceRange = ThisWorkbook.Sheets("SheetX").Range("AreaX") ' Adjust source range
    
    ' Ensure SheetA is properly referenced before pasting
    With targetSheet
        Set targetRange = .Range("A1")
        sourceRange.Copy
        targetRange.PasteSpecial Paste:=xlPasteFormulas ' Paste formulas (including values)

        Application.CutCopyMode = False ' Clear clipboard
    End With
    
    MsgBox "Scenario " & wsName & " Saved Successfully", vbInformation
    Application.EnableEvents = True
End Sub

Sub HandleWorksheetChange(ByVal Target As Range, ByVal ws As Worksheet)
On Error GoTo CleanExit
    Dim sourceSheet As Worksheet
    Dim sourceRange As Range
    Dim targetRange As Range
    Dim sheetName As String
    Dim SheetExists As Boolean
    Dim wb As Workbook

    Set wb = ThisWorkbook
Application.DisplayAlerts = False ' Suppress warnings
    ' Check if the changed cell is CellX
    If Not Intersect(Target, ws.Range("CellX")) Is Nothing Then
        Application.EnableEvents = False ' Prevent infinite loops
        
        sheetName = ws.Range("CellX").Value ' Get the new value in CellX
        SheetExists = False

        ' Check if the sheet with the name in CellX exists
        For Each sourceSheet In wb.Sheets
            If sourceSheet.Name = sheetName Then
                SheetExists = True
                Exit For
            End If
        Next sourceSheet

        ' If sheet does not exist, show message and exit
        If Not SheetExists And ws.Range("CellX").Value <> "" Then
            MsgBox "No Data in " & sheetName & " Yet", vbInformation
            With ws.Range("CellX").Offset(1, 0)
                ws.Range("CellX").Font.Color = RGB(0, 0, 0)
                .Font.Color = RGB(255, 0, 0) ' Red color
                .Font.Bold = True ' Bold font
            End With
            
         ElseIf ws.Range("CellX").Value = "" Then
         
         GoTo CleanExit
            
        Else
            ws.Range("CellX").Font.Color = RGB(0, 0, 0)
            ws.Range("CellX").Offset(1, 0).Value = ""

            ' Define the source range to copy
            Set sourceRange = sourceSheet.Range("AreaX") ' Adjust as needed

            ' Define the target range in "SheetX"
            Set targetRange = ws.Range("A1")
            
            
Application.DisplayAlerts = False ' Suppress warnings
            
            
            

            ' Copy and paste values
            sourceRange.Copy
            targetRange.PasteSpecial Paste:=xlPasteFormulas ' Paste formulas (including values)
            
            Application.CutCopyMode = False ' Clear clipboard
                    

        Application.EnableEvents = True ' Re-enable events
            
            
            
            wb.Sheets("SheetX").Range("CellX").Select
        End If

    End If
CleanExit:
    Application.EnableEvents = True

    
End Sub
